import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:flutter/material.dart';
import '&home_page_view_model&.dart';


import '../../global/animation/slide_page_route.dart';
import '../../global/base/BasePage.dart';
import '../../global/base/ViewModelProvider.dart';
import '../../widgets/commom_app_bar.dart';
import '../../global/http/http_result.dart';
import '../../models/banner_entity.dart';
import '../../widgets/common_exception_layout.dart';


/*
 * #                                                   #
 * #                       _oo0oo_                     #
 * #                      o8888888o                    #
 * #                      88" . "88                    #
 * #                      (| -_- |)                    #
 * #                      0\  =  /0                    #
 * #                    ___/`---'\___                  #
 * #                  .' \\|     |# '.                 #
 * #                 / \\|||  :  |||# \                #
 * #                / _||||| -:- |||||- \              #
 * #               |   | \\\  -  #/ |   |              #
 * #               | \_|  ''\---/''  |_/ |             #
 * #               \  .-\__  '-'  ___/-. /             #
 * #             ___'. .'  /--.--\  `. .'___           #
 * #          ."" '<  `.___\_<|>_/___.' >' "".         #
 * #         | | :  `- \`.;`\ _ /`;.`/ - ` : | |       #
 * #         \  \ `_.   \_ __\ /__ _/   .-` /  /       #
 * #     =====`-.____`.___ \_____/___.-`___.-'=====    #
 * #                       `=---='                     #
 * #     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   #
 * #                                                   #
 * #               佛祖保佑         永无BUG              #
 * #                                                   #
 */

class &Home&Page extends BaseRoutePage {
  const &Home&Page({super.key});

  @override
  ConsumerState<&Home&Page> createState() => &Home&PageState();

  ///动态路由
  static navigator({required BuildContext context, Map<String, dynamic>? arguments}) {
      return Navigator.of(context).push(
        SlidePageRoute(
          arguments: arguments ?? {'argms': 'i am example'},
          builder: (context) => &Home&Page.getRoutePage(const &Home&Page())),
      );
  }

  static ViewModelProvider<&HomeViewModel&> getRoutePage(BaseRoutePage child) {
    return ViewModelProvider(viewModel: &HomeViewModel&(), child: child);
  }
}

class &Home&PageState extends BaseRoutePageState<&Home&Page, &Home&PageViewModel> {

  @override
  void onListener() {}

  @override
  void onLoad() {
    final arguments = ModalRoute.of(context)?.settings.arguments;
        if (arguments != null && arguments is Map) {
          print(arguments["argms"]);
    }
  }

  bool _onBackPressed() {
      Navigator.pop(context);
      return true;
  }

  @override
  Widget buildContent(BuildContext context) {
      return Scaffold(
        appBar: CommonAppBar(
                title: '&Home&Page',
                  onBackPressed: () {
                    _onBackPressed();
      }),
      floatingActionButton: FloatingActionButton(
                onPressed: () {},
                tooltip: 'Increment',
                child: const Icon(Icons.add),
              ),
      body: _getBody());
  }

  /// 使用Consumer(ConsumerWidget的封装)，控制刷新的范围。实现局部刷新
    Consumer _getBody() => Consumer(builder: (context, ref, _) {
          ///监听数据变化
          /*ref.listen(getViewModel(context).mCountStateProvider, (previous, next) {
             logger.e('buildContent===2222');
          });*/

          ///观察数据变化，Widget的值跟随一起变化
          HttpResult<List<BannerEntity>> bannerResult = ref.watch(getViewModel(context).mBannerStateProvider);

          int getHttpStatue() {
            if (bannerResult.state == HttpResultState.beforeRequest) {
              return CommonExceptionLayout.beforeRequestEmptyLayout;
            } else if (bannerResult.state == HttpResultState.onSuccess) {
              ///根据业务需要，还可以细分是否数据为null等情况
              return CommonExceptionLayout.requestSuccess;
            } else if (bannerResult.state == HttpResultState.onError) {
              return CommonExceptionLayout.exceptionServerError;
            }
            return CommonExceptionLayout.beforeRequestEmptyLayout;
          }

          return CommonExceptionLayout(
            status: getHttpStatue(),
            onRetry: () {},
            body: WillPopScope(
              onWillPop: () async {
                return _onBackPressed();
              },
              child: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    const Text('this is &Home&Page'),
                    Divider(height: 15.h, color: Colors.transparent),
                    SizedBox(
                      height: 30.h,
                      child: ElevatedButton(onPressed: () async {}, child: const Text('add count')),
                    ),
                  ],
                ),
              ),
            ),
          );
        });


}


